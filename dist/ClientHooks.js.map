{"version":3,"file":"ClientHooks.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIA,6BAA6B;AAE7B,2EAA2E;AAE3E,kEAAkE;AAClE,uGAAuG;AAEvG,0EAA0E;AAC1E,6FAA6F;AAE7F,gGAAgG;AAChG,4FAA4F;AAC5F,wHAAwH;AAGxH,wFAAwF;AACxF,0EAA0E;AAC1E,sDAAsD;AAEtD,iFAAiF;AACjF,kFAAkF;AAClF,aAAa;AAEb,iFAAiF;AACjF,gEAAgE;AAChE,aAAa;AAGb,iDAAiD;AAEjD,2HAA2H;AAC3H,uCAAuC;AACvC,aAAa;AAEb,gCAAgC;AAChC,iCAAiC;AACjC,MAAM;AAEN,6EAA6E;AAE7E,gCAAgC;AAChC,qCAAqC;AACrC,oCAAoC;AACpC,eAAe;AACf,2BAA2B;AAC3B,+BAA+B;AAC/B,8BAA8B;AAC9B,yCAAyC;AACzC,aAAa;AAEb,mEAAmE;AACnE,8EAA8E;AAC9E,qEAAqE;AACrE,uFAAuF;AACvF,uDAAuD;AACvD,8CAA8C;AAC9C,gEAAgE;AAChE,iFAAiF;AACjF,YAAY;AAEZ,kFAAkF;AAClF,mFAAmF;AACnF,0FAA0F;AAC1F,cAAc;AACd,aAAa;AAEb,QAAQ;AAER,sEAAsE;AAEtE,SAAS;AACT,IAAI;AAEG,MAAM,WAAW;IAEtB,MAAM,CAAO,MAAM,CAAC,OAAgC;;YAClD,OAAO,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QAChG,CAAC;KAAA;IACD,MAAM,CAAC,gBAAgB,CAAC,OAAgC;QACtD,MAAM,WAAW,GAAG,OAAO,CAAC,cAAc,EAAE,CAAC;QAC7C,MAAM,gBAAgB,GAAG,WAAW,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAChE,MAAM,YAAY,GAAG,gDAAgD,CAAC;QACtE,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,QAAQ,EAAE,EAAE;YACnD,MAAM,KAAK,GAAG,gBAAgB,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAC9D,OAAO,GAAG,KAAK,IAAI,IAAI,CAAC;SACzB;QACD,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACtC,IAAI,OAAO,EAAE;gBACV,CAAgC,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;aACnE;iBAAM;gBAEJ,CAAgC,CAAC,eAAe,CAAC,wBAAwB,EAAE,YAAY,CAAC,CAAC;aAC3F;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;UCpGD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNkD","sources":["webpack://cds.ClientHooks/./src/Forms/AccountForm.ts","webpack://cds.ClientHooks/webpack/bootstrap","webpack://cds.ClientHooks/webpack/runtime/define property getters","webpack://cds.ClientHooks/webpack/runtime/hasOwnProperty shorthand","webpack://cds.ClientHooks/webpack/runtime/make namespace object","webpack://cds.ClientHooks/./src/index.ts"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport * as moment from \"moment\";\r\n\r\n// export class AccountForm {\r\n\r\n//   static async sample(context: Xrm.Events.EventContext): Promise<void> {\r\n\r\n//     if (context.getFormContext().getAttribute(\"name\") !== null)\r\n//       context.getFormContext().getAttribute(\"name\").setValue(\"Ahmad Tea Company 3\");       // string\r\n\r\n//     if (context.getFormContext().getAttribute(\"creditonhold\") !== null)\r\n//       context.getFormContext().getAttribute(\"creditonhold\").setValue(true);     // boolean\r\n\r\n//     // context.getFormContext().getAttribute(\"industrycode\").setValue(1);        // optionset\r\n//     // context.getFormContext().getAttribute(\"creditlimit\").setValue(1000);      // money\r\n//     // //context.getFormContext().getAttribute(\"parentaccountid\").setValue(\"{7715F4F7-794A-EE11-8419-00155D017101}\");\r\n\r\n\r\n//     // const name: string = context.getFormContext().getAttribute(\"name\").getValue();\r\n//     // const id: string = context.getFormContext().data.entity.getId();\r\n//     // context.getFormContext().data.entity.save();\r\n\r\n//     // context.getFormContext().getAttribute(\"name\").controls.forEach((c) => {\r\n//     //   (c as Xrm.Controls.StringControl).setNotification(\"A wrong name\", id);\r\n//     // });\r\n\r\n//     // context.getFormContext().getAttribute(\"name\").controls.forEach((c) => {\r\n//     //   (c as Xrm.Controls.StringControl).setDisabled(true);\r\n//     // });\r\n\r\n\r\n//     // let contacts: Array<Xrm.Entity> = null;\r\n\r\n//     // await Xrm.WebApi.retrieveMultipleRecords(\"account\", \"?$select=name\").then((result: Xrm.RetrieveMultipleResult)=>{\r\n//     //   contacts = result.entities;\r\n//     // });\r\n\r\n//     // console.log(contacts);\r\n//     // alert(contacts.length);\r\n//   }\r\n\r\n//   //static async onload(context: Xrm.Events.EventContext): Promise<void> {\r\n\r\n//   // const foo = \"Some text\";\r\n//   //const now = moment().format();\r\n//   // const now: string = \"Ahmad\";\r\n//   // context\r\n//   //   .getFormContext()\r\n//   //   .getAttribute(\"name\")\r\n//   //   .addOnChange(() => {\r\n//   //     console.log(`now is ${now}`);\r\n//   //   });\r\n\r\n//   //   context.getFormContext().getAttribute(\"name\").getValue();\r\n//   //   context.getFormContext().getAttribute(\"name\").setValue(\"Ahmad Tea\");\r\n//   //   context.getFormContext().getAttribute(\"name\").getIsDirty();\r\n//   //   context.getFormContext().getAttribute(\"name\").addOnChange(this.onFieldChange)\r\n//   //   context.getFormContext().data.entity.getId();\r\n//   //   context.getContext().getClientUrl();\r\n//   //   context.getFormContext().getControl().forEach((c) => {\r\n//   //       (c as Xrm.Controls.StringControl).setNotification(\"message\",\"uid\");\r\n//   //   })\r\n\r\n//   //   context.getFormContext().getAttribute(\"websiteurl\").addOnChange((e) => {\r\n//   //     e.getFormContext().getAttribute(\"websiteurl\").controls.forEach((c) => {\r\n//   //       (c as Xrm.Controls.StringControl).setNotification(\"Hello\", \"not valid url\");\r\n//   //     })\r\n//   //   });\r\n\r\n//   //}\r\n\r\n//   // static onFieldChange(context: Xrm.Events.EventContext): void {\r\n\r\n//   // }\r\n// }\r\n\r\nexport class AccountForm {\r\n\r\n  static async onload(context: Xrm.Events.EventContext): Promise<void> {\r\n    context.getFormContext().getAttribute(\"websiteurl\").addOnChange(AccountForm.onWebsiteChanged);\r\n  }\r\n  static onWebsiteChanged(context: Xrm.Events.EventContext): void {\r\n    const formContext = context.getFormContext();\r\n    const websiteAttribute = formContext.getAttribute(\"websiteurl\");\r\n    const websiteRegex = /^(https?:\\/\\/)?([\\w\\d]+\\.)?[\\w\\d]+\\.\\w+\\/?.+$/g;\r\n    let isValid = true;\r\n    if (websiteAttribute && websiteAttribute.getValue()) {\r\n      const match = websiteAttribute.getValue().match(websiteRegex);\r\n      isValid = match != null;\r\n    }\r\n    websiteAttribute.controls.forEach((c) => {\r\n      if (isValid) {\r\n        (c as Xrm.Controls.StringControl).clearNotification(\"websiteurl\");\r\n      } else {\r\n        \r\n        (c as Xrm.Controls.StringControl).setNotification(\"Invalid WebsiteAddress\", \"websiteurl\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { AccountForm } from \"./Forms/AccountForm\";\r\n"],"names":[],"sourceRoot":""}